{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAVW,SAACC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAKtB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAVAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDd2BK,CAAa5B,GAAjCa,EAHuB,EAG7BN,KAAce,EAHe,EAGfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAEnDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGKL,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfpBkB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAY9B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAIJ,6BAEQ6C,EAAWrB,KAAM,SAAAT,GAAQ,OACjB,cAAC,EAAD,CAEAA,SAAWA,GADJA,Y,MCzB/B+B,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2a08002.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            // console.log('submit hecho');\r\n            if (inputValue.trim().length > 2 ) {\r\n                setCategories( cats => [ inputValue,...cats] );\r\n                setinputValue('');\r\n            }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value= {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","//Personal Note: Review helpers\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zIhdSZGeOEuJBYQcAzmqwV8HctMPQJ1n`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GridGifItem = ({ id, title, url }) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GridGifItem } from './GridGifItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn' >{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n\r\n\r\n                {images.map(img => (\r\n                    <GridGifItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state; // Returns the Obj {data:[],loading:true}\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'Other'] ); // Solucion 1 con solo spread\r\n    //     setCategories ( cats => [...cats, 'Other Cat'] );\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories = {setCategories} />\r\n\r\n            <hr/>\r\n\r\n        \r\n\r\n        <ol>\r\n            {\r\n                categories.map(  category => (\r\n                        <GifGrid\r\n                        key = {category} \r\n                        category= {category}\r\n                        />\r\n                    \r\n                ))\r\n            }\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n<GifExpertApp />, \ndocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}